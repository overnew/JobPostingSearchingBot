name: Build and Push Docker Image
on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

env:
  # docker hub의 organization 이름
  REGISTRY: everenew
  # build and push 할 docker image 이름
  IMAGE_NAME: slackbot
  # build and push 할 docker image의 tag
  TAG: latest
  # docker push 명령어를 사용할 경우 login 이 필요합니다. 이를 구분하고 필요시에만 로그인하는 습관을 들이는 것이 보안상 좋다.
  IS_PUSH: ${{ github.event_name != 'pull_request' }}

jobs:
  build-slackbot-image:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Login to DockerHub
      if: ${{ env.IS_PUSH }}
      uses: docker/login-action@v1
      with:
        # docker hub login을 위해서 계정 정보를 github repo settings에 설정해 두었다.
        username: ${{ secrets.DEV_DOCKER_ID }}
        password: ${{ secrets.DEV_DOCKER_PW }}

      # 여기서 docker에서 제공하는 action이 있지만, 아래처럼 cli 명령어를 사용하는 것이 간편하여 그냥 사용하였다.
    - uses: actions/checkout@v3
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}

    - name: Push the Docker image
      run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}

#    - name: Deploy BeanStalk
#      uses: einaregilsson/beanstalk-deploy@v21
#      with:
#        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#        application_name: 001_test_app
#        environment_name: 001testapp-env
#        version_label: slack-deploy-${{ github.run_number }}
#        region: ap-northeast-2
#        deployment_package: docker-compose.yml